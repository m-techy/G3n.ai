{
    "sourceFile": "src/components/TTI.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1708683002637,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1708683011859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,9 +79,9 @@\n                                 value={inputText}\r\n                                 onChange={handleInputChange}\r\n                             />\r\n                             <span\r\n-                                className=\"flex items-center rounded rounded-l-none border-0 px-3 pt-1 font-bold text-grey-100 w-[20%]\">\r\n+                                className=\"flex items-center rounded rounded-l-none border-0 px-3 pt-7 font-bold text-grey-100 w-[20%]\">\r\n \r\n                                 <button className=\"generate-btn\" onClick={() => loadImage()}>\r\n                                     <svg height=\"24\" width=\"24\" fill=\"#FFFFFF\" viewBox=\"0 0 24 24\" data-name=\"Layer 1\" id=\"Layer_1\" className=\"sparkle\">\r\n                                         <path d=\"M10,21.236,6.755,14.745.264,11.5,6.755,8.255,10,1.764l3.245,6.491L19.736,11.5l-6.491,3.245ZM18,21l1.5,3L21,21l3-1.5L21,18l-1.5-3L18,18l-3,1.5ZM19.333,4.667,20.5,7l1.167-2.333L24,3.5,21.667,2.333,20.5,0,19.333,2.333,17,3.5Z\"></path>\r\n"
                },
                {
                    "date": 1708683020616,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,9 +79,9 @@\n                                 value={inputText}\r\n                                 onChange={handleInputChange}\r\n                             />\r\n                             <span\r\n-                                className=\"flex items-center rounded rounded-l-none border-0 px-3 pt-7 font-bold text-grey-100 w-[20%]\">\r\n+                                className=\"flex items-center rounded rounded-l-none border-0 px-3 font-bold text-grey-100 w-[20%]\">\r\n \r\n                                 <button className=\"generate-btn\" onClick={() => loadImage()}>\r\n                                     <svg height=\"24\" width=\"24\" fill=\"#FFFFFF\" viewBox=\"0 0 24 24\" data-name=\"Layer 1\" id=\"Layer_1\" className=\"sparkle\">\r\n                                         <path d=\"M10,21.236,6.755,14.745.264,11.5,6.755,8.255,10,1.764l3.245,6.491L19.736,11.5l-6.491,3.245ZM18,21l1.5,3L21,21l3-1.5L21,18l-1.5-3L18,18l-3,1.5ZM19.333,4.667,20.5,7l1.167-2.333L24,3.5,21.667,2.333,20.5,0,19.333,2.333,17,3.5Z\"></path>\r\n"
                },
                {
                    "date": 1708683039720,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,134 @@\n+\r\n+import React, { useState } from \"react\";\r\n+import axios from 'axios';\r\n+import logoimg from \"../assets/logoimage.png\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { end_point_image } from \"../constants/url\";\r\n+import Loader from \"./Loader\";\r\n+\r\n+\r\n+const TTI = () => {\r\n+    const [imageData, setImageData] = useState(null);\r\n+    const [inputText, setInputText] = useState(\"\");\r\n+    const [error, setError] = useState(null);\r\n+    const [loading, setLoading] = useState(false); // Add loading state\r\n+    const [buttonDisabled, setButtonDisabled] = useState(false); // Add button disabled state\r\n+\r\n+    const handleInputChange = (event) => {\r\n+        setInputText(event.target.value);\r\n+    };\r\n+\r\n+    const loadImage = () => {\r\n+        setLoading(true); // Set loading to true before making the API call\r\n+        setButtonDisabled(true); // Disable the button\r\n+        const prompt = {\r\n+            image_query: inputText\r\n+        };\r\n+\r\n+        axios.post(`${end_point_image}/process_image`, prompt, {\r\n+            headers: {\r\n+                'Content-Type': 'application/json'\r\n+            }\r\n+        })\r\n+            .then(response => {\r\n+                setImageData(response.data.image_base64);\r\n+                setError(null);\r\n+            })\r\n+            .catch(error => {\r\n+                setImageData(\"\")\r\n+                setError(error.message || 'An error occurred while fetching image data');\r\n+            })\r\n+            .finally(() => {\r\n+                setLoading(false); // Set loading to false once response is received\r\n+                setButtonDisabled(false); // Enable the button\r\n+            });\r\n+    };\r\n+\r\n+    const handleDownload = () => {\r\n+        const link = document.createElement('a');\r\n+        link.href = `data:image/jpeg;base64,${imageData}`;\r\n+        link.download = 'generated_image.jpg';\r\n+        document.body.appendChild(link);\r\n+        link.click();\r\n+        document.body.removeChild(link);\r\n+    };\r\n+\r\n+    return (\r\n+        <div className=\"bg-black h-screen w-full flex flex-col gap-10 py-4 px-[5%]\">\r\n+            <div className=\"icon text-blue-50 text-4xl hover:text-sky-400\">\r\n+                <Link to='/products'>\r\n+                    <i className='bx bx-arrow-back'></i>\r\n+                </Link>\r\n+            </div>\r\n+            <article className=\"flex flex-col text-white gap-8\">\r\n+                <div className=\"heading\">\r\n+                    <div className=\"text-center text-4xl font-bold bg-gradient-to-r from-blue-500 to-sky-200  bg-clip-text text-transparent\">\r\n+                        Text To Image Generation\r\n+                    </div>\r\n+                </div>\r\n+                <div className=\"h-[10vh] flex flex-col px-2 w-[70%] mx-auto bg-gray-200 rounded-3xl\">\r\n+                    <div className=\"search-box w-full h-full\">\r\n+                        <div className=\"flex flex-row h-full w-full\">\r\n+                            <span\r\n+                                className=\"flex h-full items-center rounded rounded-r-none border-0 px-3 pt-1 font-bold text-grey-100 w-[10%]\">\r\n+                                <img src={logoimg} className=\"h-[90%]\" alt=\"logo\" />\r\n+                            </span>\r\n+                            <input\r\n+                                className=\"h-full text-grey-darker py-2 font-semibold text-grey-darkest border border-gray-200 px-2 outline-none text-lg text-gray-600 w-[70%] bg-gray-200\"\r\n+                                type=\"text\" placeholder=\"What do you want to learn?\"\r\n+                                value={inputText}\r\n+                                onChange={handleInputChange}\r\n+                            />\r\n+                            <span\r\n+                                className=\"flex items-center rounded rounded-l-none border-0 px-3 font-bold text-grey-100 w-[20%]\">\r\n+\r\n+                                <button className=\"generate-btn\" onClick={() => loadImage()}>\r\n+                                    <svg height=\"24\" width=\"24\" fill=\"#FFFFFF\" viewBox=\"0 0 24 24\" data-name=\"Layer 1\" id=\"Layer_1\" className=\"sparkle\">\r\n+                                        <path d=\"M10,21.236,6.755,14.745.264,11.5,6.755,8.255,10,1.764l3.245,6.491L19.736,11.5l-6.491,3.245ZM18,21l1.5,3L21,21l3-1.5L21,18l-1.5-3L18,18l-3,1.5ZM19.333,4.667,20.5,7l1.167-2.333L24,3.5,21.667,2.333,20.5,0,19.333,2.333,17,3.5Z\"></path>\r\n+                                    </svg>\r\n+\r\n+                                    <span className=\"generate-text\">Generate</span>\r\n+                                </button>\r\n+                            </span>\r\n+                        </div>\r\n+                    </div>\r\n+                </div>\r\n+\r\n+                {error && <div className=\"error text-center w-full\">{error}</div>}\r\n+                {loading ? ( // Display Loader while loading\r\n+                    <div className=\"flex justify-center w-full\">\r\n+                        <Loader />\r\n+                    </div>\r\n+                ) : (\r\n+                    imageData && (\r\n+                        <>\r\n+                            <div className=\"image-container h-[50vh] w-full flex gap-5 justify-center items-center\">\r\n+                                <img src={`data:image/png;base64,${imageData}`} alt=\"Generated Image\"\r\n+                                    className=\"h-full\"\r\n+                                />\r\n+                                <button\r\n+                                    onClick={() => handleDownload()}\r\n+                                    className=\"rounded-full w-[50px] h-[50px] text-white bg-gradient-to-r from-blue-500 to-sky-200 hover:scale-105\">\r\n+                                    <i className=\"bx bx-download text-2xl\"></i>\r\n+                                </button>\r\n+                                {/* <button className=\"botao\" onClick={() => handleDownload()}>\r\n+                                    <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className=\"mysvg\"><g id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\">\r\n+                                    </g><g id=\"SVGRepo_tracerCarrier\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></g><g id=\"SVGRepo_iconCarrier\">\r\n+                                            <g id=\"Interface / Download\">\r\n+                                                <path id=\"Vector\" d=\"M6 21H18M12 3V17M12 17L17 12M12 17L7 12\" stroke=\"#f1f1f1\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n+                                                </path>\r\n+                                            </g> </g>\r\n+                                    </svg>\r\n+                                    <span className=\"texto\">Download</span>\r\n+                                </button> */}\r\n+                            </div>\r\n+\r\n+                        </>\r\n+                    )\r\n+                )}\r\n+            </article>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default TTI;\r\n"
                },
                {
                    "date": 1708683249886,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,252 +1,128 @@\n-\r\n import React, { useState } from \"react\";\r\n-import axios from 'axios';\r\n+import axios from \"axios\";\r\n import logoimg from \"../assets/logoimage.png\";\r\n import { Link } from \"react-router-dom\";\r\n import { end_point_image } from \"../constants/url\";\r\n import Loader from \"./Loader\";\r\n \r\n-\r\n const TTI = () => {\r\n-    const [imageData, setImageData] = useState(null);\r\n-    const [inputText, setInputText] = useState(\"\");\r\n-    const [error, setError] = useState(null);\r\n-    const [loading, setLoading] = useState(false); // Add loading state\r\n-    const [buttonDisabled, setButtonDisabled] = useState(false); // Add button disabled state\r\n+  const [imageData, setImageData] = useState(null);\r\n+  const [inputText, setInputText] = useState(\"\");\r\n+  const [error, setError] = useState(null);\r\n+  const [loading, setLoading] = useState(false); // Add loading state\r\n+  const [buttonDisabled, setButtonDisabled] = useState(false); // Add button disabled state\r\n \r\n-    const handleInputChange = (event) => {\r\n-        setInputText(event.target.value);\r\n-    };\r\n+  const handleInputChange = (event) => {\r\n+    setInputText(event.target.value);\r\n+  };\r\n \r\n-    const loadImage = () => {\r\n-        setLoading(true); // Set loading to true before making the API call\r\n-        setButtonDisabled(true); // Disable the button\r\n-        const prompt = {\r\n-            image_query: inputText\r\n-        };\r\n-\r\n-        axios.post(`${end_point_image}/process_image`, prompt, {\r\n-            headers: {\r\n-                'Content-Type': 'application/json'\r\n-            }\r\n-        })\r\n-            .then(response => {\r\n-                setImageData(response.data.image_base64);\r\n-                setError(null);\r\n-            })\r\n-            .catch(error => {\r\n-                setImageData(\"\")\r\n-                setError(error.message || 'An error occurred while fetching image data');\r\n-            })\r\n-            .finally(() => {\r\n-                setLoading(false); // Set loading to false once response is received\r\n-                setButtonDisabled(false); // Enable the button\r\n-            });\r\n+  const loadImage = () => {\r\n+    setLoading(true); // Set loading to true before making the API call\r\n+    setButtonDisabled(true); // Disable the button\r\n+    const prompt = {\r\n+      image_query: inputText,\r\n     };\r\n \r\n-    const handleDownload = () => {\r\n-        const link = document.createElement('a');\r\n-        link.href = `data:image/jpeg;base64,${imageData}`;\r\n-        link.download = 'generated_image.jpg';\r\n-        document.body.appendChild(link);\r\n-        link.click();\r\n-        document.body.removeChild(link);\r\n-    };\r\n+    axios\r\n+      .post(`${end_point_image}/process_image`, prompt, {\r\n+        headers: {\r\n+          \"Content-Type\": \"application/json\",\r\n+        },\r\n+      })\r\n+      .then((response) => {\r\n+        setImageData(response.data.image_base64);\r\n+        setError(null);\r\n+      })\r\n+      .catch((error) => {\r\n+        setImageData(\"\");\r\n+        setError(\r\n+          error.message || \"An error occurred while fetching image data\"\r\n+        );\r\n+      })\r\n+      .finally(() => {\r\n+        setLoading(false); // Set loading to false once response is received\r\n+        setButtonDisabled(false); // Enable the button\r\n+      });\r\n+  };\r\n \r\n-    return (\r\n-        <div className=\"bg-black h-screen w-full flex flex-col gap-10 py-4 px-[5%]\">\r\n-            <div className=\"icon text-blue-50 text-4xl hover:text-sky-400\">\r\n-                <Link to='/products'>\r\n-                    <i className='bx bx-arrow-back'></i>\r\n-                </Link>\r\n-            </div>\r\n-            <article className=\"flex flex-col text-white gap-8\">\r\n-                <div className=\"heading\">\r\n-                    <div className=\"text-center text-4xl font-bold bg-gradient-to-r from-blue-500 to-sky-200  bg-clip-text text-transparent\">\r\n-                        Text To Image Generation\r\n-                    </div>\r\n-                </div>\r\n-                <div className=\"h-[10vh] flex flex-col px-2 w-[70%] mx-auto bg-gray-200 rounded-3xl\">\r\n-                    <div className=\"search-box w-full h-full\">\r\n-                        <div className=\"flex flex-row h-full w-full\">\r\n-                            <span\r\n-                                className=\"flex h-full items-center rounded rounded-r-none border-0 px-3 pt-1 font-bold text-grey-100 w-[10%]\">\r\n-                                <img src={logoimg} className=\"h-[90%]\" alt=\"logo\" />\r\n-                            </span>\r\n-                            <input\r\n-                                className=\"h-full text-grey-darker py-2 font-semibold text-grey-darkest border border-gray-200 px-2 outline-none text-lg text-gray-600 w-[70%] bg-gray-200\"\r\n-                                type=\"text\" placeholder=\"What do you want to learn?\"\r\n-                                value={inputText}\r\n-                                onChange={handleInputChange}\r\n-                            />\r\n-                            <span\r\n-                                className=\"flex items-center rounded rounded-l-none border-0 px-3 font-bold text-grey-100 w-[20%]\">\r\n+  const handleDownload = () => {\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = `data:image/jpeg;base64,${imageData}`;\r\n+    link.download = \"generated_image.jpg\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n \r\n-                                <button className=\"generate-btn\" onClick={() => loadImage()}>\r\n-                                    <svg height=\"24\" width=\"24\" fill=\"#FFFFFF\" viewBox=\"0 0 24 24\" data-name=\"Layer 1\" id=\"Layer_1\" className=\"sparkle\">\r\n-                                        <path d=\"M10,21.236,6.755,14.745.264,11.5,6.755,8.255,10,1.764l3.245,6.491L19.736,11.5l-6.491,3.245ZM18,21l1.5,3L21,21l3-1.5L21,18l-1.5-3L18,18l-3,1.5ZM19.333,4.667,20.5,7l1.167-2.333L24,3.5,21.667,2.333,20.5,0,19.333,2.333,17,3.5Z\"></path>\r\n-                                    </svg>\r\n-\r\n-                                    <span className=\"generate-text\">Generate</span>\r\n-                                </button>\r\n-                            </span>\r\n-                        </div>\r\n-                    </div>\r\n-                </div>\r\n-\r\n-                {error && <div className=\"error text-center w-full\">{error}</div>}\r\n-                {loading ? ( // Display Loader while loading\r\n-                    <div className=\"flex justify-center w-full\">\r\n-                        <Loader />\r\n-                    </div>\r\n-                ) : (\r\n-                    imageData && (\r\n-                        <>\r\n-                            <div className=\"image-container h-[50vh] w-full flex gap-5 justify-center items-center\">\r\n-                                <img src={`data:image/png;base64,${imageData}`} alt=\"Generated Image\"\r\n-                                    className=\"h-full\"\r\n-                                />\r\n-                                <button\r\n-                                    onClick={() => handleDownload()}\r\n-                                    className=\"rounded-full w-[50px] h-[50px] text-white bg-gradient-to-r from-blue-500 to-sky-200 hover:scale-105\">\r\n-                                    <i className=\"bx bx-download text-2xl\"></i>\r\n-                                </button>\r\n-                                {/* <button className=\"botao\" onClick={() => handleDownload()}>\r\n-                                    <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className=\"mysvg\"><g id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\">\r\n-                                    </g><g id=\"SVGRepo_tracerCarrier\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></g><g id=\"SVGRepo_iconCarrier\">\r\n-                                            <g id=\"Interface / Download\">\r\n-                                                <path id=\"Vector\" d=\"M6 21H18M12 3V17M12 17L17 12M12 17L7 12\" stroke=\"#f1f1f1\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n-                                                </path>\r\n-                                            </g> </g>\r\n-                                    </svg>\r\n-                                    <span className=\"texto\">Download</span>\r\n-                                </button> */}\r\n-                            </div>\r\n-\r\n-                        </>\r\n-                    )\r\n-                )}\r\n-            </article>\r\n+  return (\r\n+    <div className=\"bg-black h-screen w-full flex flex-col gap-10 py-4 px-[5%]\">\r\n+      <div className=\"icon text-blue-50 text-4xl hover:text-sky-400\">\r\n+        <Link to=\"/products\">\r\n+          <i className=\"bx bx-arrow-back\"></i>\r\n+        </Link>\r\n+        <div className=\"heading\">\r\n+          <div className=\"text-center text-4xl font-bold bg-gradient-to-r from-blue-500 to-sky-200  bg-clip-text text-transparent\">\r\n+            Text To Image Generation\r\n+          </div>\r\n         </div>\r\n-    );\r\n-};\r\n+      </div>\r\n+      <article className=\"flex flex-col text-white gap-8\">\r\n+        <div className=\"h-[10vh] flex flex-col px-2 w-[70%] mx-auto bg-gray-200 rounded-3xl\">\r\n+          <div className=\"search-box w-full h-full\">\r\n+            <div className=\"flex flex-row h-full w-full\">\r\n+              <span className=\"flex h-full items-center rounded rounded-r-none border-0 px-3 pt-1 font-bold text-grey-100 w-[10%]\">\r\n+                <img src={logoimg} className=\"h-[90%]\" alt=\"logo\" />\r\n+              </span>\r\n+              <input\r\n+                className=\"h-full text-grey-darker py-2 font-semibold text-grey-darkest border border-gray-200 px-2 outline-none text-lg text-gray-600 w-[70%] bg-gray-200\"\r\n+                type=\"text\"\r\n+                placeholder=\"What do you want to learn?\"\r\n+                value={inputText}\r\n+                onChange={handleInputChange}\r\n+              />\r\n+              <span className=\"flex items-center rounded rounded-l-none border-0 px-3 font-bold text-grey-100 w-[20%]\">\r\n+                <button className=\"generate-btn\" onClick={() => loadImage()}>\r\n+                  <svg\r\n+                    height=\"24\"\r\n+                    width=\"24\"\r\n+                    fill=\"#FFFFFF\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                    data-name=\"Layer 1\"\r\n+                    id=\"Layer_1\"\r\n+                    className=\"sparkle\"\r\n+                  >\r\n+                    <path d=\"M10,21.236,6.755,14.745.264,11.5,6.755,8.255,10,1.764l3.245,6.491L19.736,11.5l-6.491,3.245ZM18,21l1.5,3L21,21l3-1.5L21,18l-1.5-3L18,18l-3,1.5ZM19.333,4.667,20.5,7l1.167-2.333L24,3.5,21.667,2.333,20.5,0,19.333,2.333,17,3.5Z\"></path>\r\n+                  </svg>\r\n \r\n-export default TTI;\r\n-\r\n-import React, { useState } from \"react\";\r\n-import axios from 'axios';\r\n-import logoimg from \"../assets/logoimage.png\";\r\n-import { Link } from \"react-router-dom\";\r\n-import { end_point_image } from \"../constants/url\";\r\n-import Loader from \"./Loader\";\r\n-\r\n-\r\n-const TTI = () => {\r\n-    const [imageData, setImageData] = useState(null);\r\n-    const [inputText, setInputText] = useState(\"\");\r\n-    const [error, setError] = useState(null);\r\n-    const [loading, setLoading] = useState(false); // Add loading state\r\n-    const [buttonDisabled, setButtonDisabled] = useState(false); // Add button disabled state\r\n-\r\n-    const handleInputChange = (event) => {\r\n-        setInputText(event.target.value);\r\n-    };\r\n-\r\n-    const loadImage = () => {\r\n-        setLoading(true); // Set loading to true before making the API call\r\n-        setButtonDisabled(true); // Disable the button\r\n-        const prompt = {\r\n-            image_query: inputText\r\n-        };\r\n-\r\n-        axios.post(`${end_point_image}/process_image`, prompt, {\r\n-            headers: {\r\n-                'Content-Type': 'application/json'\r\n-            }\r\n-        })\r\n-            .then(response => {\r\n-                setImageData(response.data.image_base64);\r\n-                setError(null);\r\n-            })\r\n-            .catch(error => {\r\n-                setImageData(\"\")\r\n-                setError(error.message || 'An error occurred while fetching image data');\r\n-            })\r\n-            .finally(() => {\r\n-                setLoading(false); // Set loading to false once response is received\r\n-                setButtonDisabled(false); // Enable the button\r\n-            });\r\n-    };\r\n-\r\n-    const handleDownload = () => {\r\n-        const link = document.createElement('a');\r\n-        link.href = `data:image/jpeg;base64,${imageData}`;\r\n-        link.download = 'generated_image.jpg';\r\n-        document.body.appendChild(link);\r\n-        link.click();\r\n-        document.body.removeChild(link);\r\n-    };\r\n-\r\n-    return (\r\n-        <div className=\"bg-black h-screen w-full flex flex-col gap-10 py-4 px-[5%]\">\r\n-            <div className=\"icon text-blue-50 text-4xl hover:text-sky-400\">\r\n-                <Link to='/products'>\r\n-                    <i className='bx bx-arrow-back'></i>\r\n-                </Link>\r\n+                  <span className=\"generate-text\">Generate</span>\r\n+                </button>\r\n+              </span>\r\n             </div>\r\n-            <article className=\"flex flex-col text-white gap-8\">\r\n-                <div className=\"heading\">\r\n-                    <div className=\"text-center text-4xl font-bold bg-gradient-to-r from-blue-500 to-sky-200  bg-clip-text text-transparent\">\r\n-                        Text To Image Generation\r\n-                    </div>\r\n-                </div>\r\n-                <div className=\"h-[10vh] flex flex-col px-2 w-[70%] mx-auto bg-gray-200 rounded-3xl\">\r\n-                    <div className=\"search-box w-full h-full\">\r\n-                        <div className=\"flex flex-row h-full w-full\">\r\n-                            <span\r\n-                                className=\"flex h-full items-center rounded rounded-r-none border-0 px-3 font-bold text-grey-100 w-[10%]\">\r\n-                                <img src={logoimg} className=\"h-[90%]\" alt=\"logo\" />\r\n-                            </span>\r\n-                            <input\r\n-                                className=\"h-full text-grey-darker py-2 font-semibold text-grey-darkest border border-gray-200 px-2 outline-none text-lg text-gray-600 w-[70%] bg-gray-200\"\r\n-                                type=\"text\" placeholder=\"What do you want to learn?\"\r\n-                                value={inputText}\r\n-                                onChange={handleInputChange}\r\n-                            />\r\n-                            <span\r\n-                                className=\"flex items-center rounded rounded-l-none border-0 px-3 font-bold text-grey-100 w-[20%]\">\r\n+          </div>\r\n+        </div>\r\n \r\n-                                <button className=\"generate-btn\" onClick={() => loadImage()}>\r\n-                                    <svg height=\"24\" width=\"24\" fill=\"#FFFFFF\" viewBox=\"0 0 24 24\" data-name=\"Layer 1\" id=\"Layer_1\" className=\"sparkle\">\r\n-                                        <path d=\"M10,21.236,6.755,14.745.264,11.5,6.755,8.255,10,1.764l3.245,6.491L19.736,11.5l-6.491,3.245ZM18,21l1.5,3L21,21l3-1.5L21,18l-1.5-3L18,18l-3,1.5ZM19.333,4.667,20.5,7l1.167-2.333L24,3.5,21.667,2.333,20.5,0,19.333,2.333,17,3.5Z\"></path>\r\n-                                    </svg>\r\n-\r\n-                                    <span className=\"generate-text\">Generate</span>\r\n-                                </button>\r\n-                            </span>\r\n-                        </div>\r\n-                    </div>\r\n-                </div>\r\n-\r\n-                {error && <div className=\"error text-center w-full\">{error}</div>}\r\n-                {loading ? ( // Display Loader while loading\r\n-                    <div className=\"flex justify-center w-full\">\r\n-                        <Loader />\r\n-                    </div>\r\n-                ) : (\r\n-                    imageData && (\r\n-                        <>\r\n-                            <div className=\"image-container h-[50vh] w-full flex gap-5 justify-center items-center\">\r\n-                                <img src={`data:image/png;base64,${imageData}`} alt=\"Generated Image\"\r\n-                                    className=\"h-full\"\r\n-                                />\r\n-                                <button\r\n-                                    onClick={() => handleDownload()}\r\n-                                    className=\"rounded-full w-[50px] h-[50px] text-white bg-gradient-to-r from-blue-500 to-sky-200 hover:scale-105\">\r\n-                                    <i className=\"bx bx-download text-2xl\"></i>\r\n-                                </button>\r\n-                                {/* <button className=\"botao\" onClick={() => handleDownload()}>\r\n+        {error && <div className=\"error text-center w-full\">{error}</div>}\r\n+        {loading ? ( // Display Loader while loading\r\n+          <div className=\"flex justify-center w-full\">\r\n+            <Loader />\r\n+          </div>\r\n+        ) : (\r\n+          imageData && (\r\n+            <>\r\n+              <div className=\"image-container h-[50vh] w-full flex gap-5 justify-center items-center\">\r\n+                <img\r\n+                  src={`data:image/png;base64,${imageData}`}\r\n+                  alt=\"Generated Image\"\r\n+                  className=\"h-full\"\r\n+                />\r\n+                <button\r\n+                  onClick={() => handleDownload()}\r\n+                  className=\"rounded-full w-[50px] h-[50px] text-white bg-gradient-to-r from-blue-500 to-sky-200 hover:scale-105\"\r\n+                >\r\n+                  <i className=\"bx bx-download text-2xl\"></i>\r\n+                </button>\r\n+                {/* <button className=\"botao\" onClick={() => handleDownload()}>\r\n                                     <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className=\"mysvg\"><g id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\">\r\n                                     </g><g id=\"SVGRepo_tracerCarrier\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></g><g id=\"SVGRepo_iconCarrier\">\r\n                                             <g id=\"Interface / Download\">\r\n                                                 <path id=\"Vector\" d=\"M6 21H18M12 3V17M12 17L17 12M12 17L7 12\" stroke=\"#f1f1f1\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n@@ -254,15 +130,14 @@\n                                             </g> </g>\r\n                                     </svg>\r\n                                     <span className=\"texto\">Download</span>\r\n                                 </button> */}\r\n-                            </div>\r\n-\r\n-                        </>\r\n-                    )\r\n-                )}\r\n-            </article>\r\n-        </div>\r\n-    );\r\n+              </div>\r\n+            </>\r\n+          )\r\n+        )}\r\n+      </article>\r\n+    </div>\r\n+  );\r\n };\r\n \r\n export default TTI;\r\n"
                },
                {
                    "date": 1708683295132,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,23 +55,23 @@\n   };\r\n \r\n   return (\r\n     <div className=\"bg-black h-screen w-full flex flex-col gap-10 py-4 px-[5%]\">\r\n-      <div className=\"icon text-blue-50 text-4xl hover:text-sky-400\">\r\n-        <Link to=\"/products\">\r\n-          <i className=\"bx bx-arrow-back\"></i>\r\n-        </Link>\r\n+      <article className=\"flex flex-col text-white gap-8\">\r\n+        <div className=\"icon text-blue-50 text-4xl hover:text-sky-400\">\r\n+          <Link to=\"/products\">\r\n+            <i className=\"bx bx-arrow-back\"></i>\r\n+          </Link>\r\n+        </div>\r\n         <div className=\"heading\">\r\n           <div className=\"text-center text-4xl font-bold bg-gradient-to-r from-blue-500 to-sky-200  bg-clip-text text-transparent\">\r\n             Text To Image Generation\r\n           </div>\r\n         </div>\r\n-      </div>\r\n-      <article className=\"flex flex-col text-white gap-8\">\r\n         <div className=\"h-[10vh] flex flex-col px-2 w-[70%] mx-auto bg-gray-200 rounded-3xl\">\r\n           <div className=\"search-box w-full h-full\">\r\n             <div className=\"flex flex-row h-full w-full\">\r\n-              <span className=\"flex h-full items-center rounded rounded-r-none border-0 px-3 pt-1 font-bold text-grey-100 w-[10%]\">\r\n+              <span className=\"flex h-full items-center rounded rounded-r-none border-0 px-3 font-bold text-grey-100 w-[10%]\">\r\n                 <img src={logoimg} className=\"h-[90%]\" alt=\"logo\" />\r\n               </span>\r\n               <input\r\n                 className=\"h-full text-grey-darker py-2 font-semibold text-grey-darkest border border-gray-200 px-2 outline-none text-lg text-gray-600 w-[70%] bg-gray-200\"\r\n"
                },
                {
                    "date": 1708683357003,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,17 +56,22 @@\n \r\n   return (\r\n     <div className=\"bg-black h-screen w-full flex flex-col gap-10 py-4 px-[5%]\">\r\n       <article className=\"flex flex-col text-white gap-8\">\r\n-        <div className=\"icon text-blue-50 text-4xl hover:text-sky-400\">\r\n-          <Link to=\"/products\">\r\n-            <i className=\"bx bx-arrow-back\"></i>\r\n-          </Link>\r\n-        </div>\r\n-        <div className=\"heading\">\r\n-          <div className=\"text-center text-4xl font-bold bg-gradient-to-r from-blue-500 to-sky-200  bg-clip-text text-transparent\">\r\n-            Text To Image Generation\r\n+        <div className=\"flex justify-between\">\r\n+          <div className=\"icon text-blue-50 text-4xl hover:text-sky-400\">\r\n+            <Link to=\"/products\">\r\n+              <i className=\"bx bx-arrow-back\"></i>\r\n+            </Link>\r\n           </div>\r\n+          <div className=\"heading\">\r\n+            <div className=\"text-center text-4xl font-bold bg-gradient-to-r from-blue-500 to-sky-200  bg-clip-text text-transparent\">\r\n+              Text To Image Generation\r\n+            </div>\r\n+          </div>\r\n+          <div className=\"hidden\">\r\n+            dmfkdsmfsds\r\n+          </div>\r\n         </div>\r\n         <div className=\"h-[10vh] flex flex-col px-2 w-[70%] mx-auto bg-gray-200 rounded-3xl\">\r\n           <div className=\"search-box w-full h-full\">\r\n             <div className=\"flex flex-row h-full w-full\">\r\n"
                },
                {
                    "date": 1708683388926,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,148 @@\n+import React, { useState } from \"react\";\r\n+import axios from \"axios\";\r\n+import logoimg from \"../assets/logoimage.png\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { end_point_image } from \"../constants/url\";\r\n+import Loader from \"./Loader\";\r\n+\r\n+const TTI = () => {\r\n+  const [imageData, setImageData] = useState(null);\r\n+  const [inputText, setInputText] = useState(\"\");\r\n+  const [error, setError] = useState(null);\r\n+  const [loading, setLoading] = useState(false); // Add loading state\r\n+  const [buttonDisabled, setButtonDisabled] = useState(false); // Add button disabled state\r\n+\r\n+  const handleInputChange = (event) => {\r\n+    setInputText(event.target.value);\r\n+  };\r\n+\r\n+  const loadImage = () => {\r\n+    setLoading(true); // Set loading to true before making the API call\r\n+    setButtonDisabled(true); // Disable the button\r\n+    const prompt = {\r\n+      image_query: inputText,\r\n+    };\r\n+\r\n+    axios\r\n+      .post(`${end_point_image}/process_image`, prompt, {\r\n+        headers: {\r\n+          \"Content-Type\": \"application/json\",\r\n+        },\r\n+      })\r\n+      .then((response) => {\r\n+        setImageData(response.data.image_base64);\r\n+        setError(null);\r\n+      })\r\n+      .catch((error) => {\r\n+        setImageData(\"\");\r\n+        setError(\r\n+          error.message || \"An error occurred while fetching image data\"\r\n+        );\r\n+      })\r\n+      .finally(() => {\r\n+        setLoading(false); // Set loading to false once response is received\r\n+        setButtonDisabled(false); // Enable the button\r\n+      });\r\n+  };\r\n+\r\n+  const handleDownload = () => {\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = `data:image/jpeg;base64,${imageData}`;\r\n+    link.download = \"generated_image.jpg\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"bg-black h-screen w-full flex flex-col gap-10 py-4 px-[5%]\">\r\n+      <article className=\"flex flex-col text-white gap-8\">\r\n+        <div className=\"flex justify-between\">\r\n+          <div className=\"icon text-blue-50 text-4xl hover:text-sky-400\">\r\n+            <Link to=\"/products\">\r\n+              <i className=\"bx bx-arrow-back\"></i>\r\n+            </Link>\r\n+          </div>\r\n+          <div className=\"heading\">\r\n+            <div className=\"text-center text-4xl font-bold bg-gradient-to-r from-blue-500 to-sky-200  bg-clip-text text-transparent\">\r\n+              Text To Image Generation\r\n+            </div>\r\n+          </div>\r\n+          <div className=\"invisible\">\r\n+            dmfkdsmfsds\r\n+          </div>\r\n+        </div>\r\n+        <div className=\"h-[10vh] flex flex-col px-2 w-[70%] mx-auto bg-gray-200 rounded-3xl\">\r\n+          <div className=\"search-box w-full h-full\">\r\n+            <div className=\"flex flex-row h-full w-full\">\r\n+              <span className=\"flex h-full items-center rounded rounded-r-none border-0 px-3 font-bold text-grey-100 w-[10%]\">\r\n+                <img src={logoimg} className=\"h-[90%]\" alt=\"logo\" />\r\n+              </span>\r\n+              <input\r\n+                className=\"h-full text-grey-darker py-2 font-semibold text-grey-darkest border border-gray-200 px-2 outline-none text-lg text-gray-600 w-[70%] bg-gray-200\"\r\n+                type=\"text\"\r\n+                placeholder=\"What do you want to learn?\"\r\n+                value={inputText}\r\n+                onChange={handleInputChange}\r\n+              />\r\n+              <span className=\"flex items-center rounded rounded-l-none border-0 px-3 font-bold text-grey-100 w-[20%]\">\r\n+                <button className=\"generate-btn\" onClick={() => loadImage()}>\r\n+                  <svg\r\n+                    height=\"24\"\r\n+                    width=\"24\"\r\n+                    fill=\"#FFFFFF\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                    data-name=\"Layer 1\"\r\n+                    id=\"Layer_1\"\r\n+                    className=\"sparkle\"\r\n+                  >\r\n+                    <path d=\"M10,21.236,6.755,14.745.264,11.5,6.755,8.255,10,1.764l3.245,6.491L19.736,11.5l-6.491,3.245ZM18,21l1.5,3L21,21l3-1.5L21,18l-1.5-3L18,18l-3,1.5ZM19.333,4.667,20.5,7l1.167-2.333L24,3.5,21.667,2.333,20.5,0,19.333,2.333,17,3.5Z\"></path>\r\n+                  </svg>\r\n+\r\n+                  <span className=\"generate-text\">Generate</span>\r\n+                </button>\r\n+              </span>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {error && <div className=\"error text-center w-full\">{error}</div>}\r\n+        {loading ? ( // Display Loader while loading\r\n+          <div className=\"flex justify-center w-full\">\r\n+            <Loader />\r\n+          </div>\r\n+        ) : (\r\n+          imageData && (\r\n+            <>\r\n+              <div className=\"image-container h-[50vh] w-full flex gap-5 justify-center items-center\">\r\n+                <img\r\n+                  src={`data:image/png;base64,${imageData}`}\r\n+                  alt=\"Generated Image\"\r\n+                  className=\"h-full\"\r\n+                />\r\n+                <button\r\n+                  onClick={() => handleDownload()}\r\n+                  className=\"rounded-full w-[50px] h-[50px] text-white bg-gradient-to-r from-blue-500 to-sky-200 hover:scale-105\"\r\n+                >\r\n+                  <i className=\"bx bx-download text-2xl\"></i>\r\n+                </button>\r\n+                {/* <button className=\"botao\" onClick={() => handleDownload()}>\r\n+                                    <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className=\"mysvg\"><g id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\">\r\n+                                    </g><g id=\"SVGRepo_tracerCarrier\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></g><g id=\"SVGRepo_iconCarrier\">\r\n+                                            <g id=\"Interface / Download\">\r\n+                                                <path id=\"Vector\" d=\"M6 21H18M12 3V17M12 17L17 12M12 17L7 12\" stroke=\"#f1f1f1\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n+                                                </path>\r\n+                                            </g> </g>\r\n+                                    </svg>\r\n+                                    <span className=\"texto\">Download</span>\r\n+                                </button> */}\r\n+              </div>\r\n+            </>\r\n+          )\r\n+        )}\r\n+      </article>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default TTI;\r\n"
                },
                {
                    "date": 1708683427318,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n \r\n   return (\r\n     <div className=\"bg-black h-screen w-full flex flex-col gap-10 py-4 px-[5%]\">\r\n       <article className=\"flex flex-col text-white gap-8\">\r\n-        <div className=\"flex justify-between\">\r\n+        <div className=\"flex justify-between pt-10\">\r\n           <div className=\"icon text-blue-50 text-4xl hover:text-sky-400\">\r\n             <Link to=\"/products\">\r\n               <i className=\"bx bx-arrow-back\"></i>\r\n             </Link>\r\n@@ -145,152 +145,4 @@\n   );\r\n };\r\n \r\n export default TTI;\r\n-import React, { useState } from \"react\";\r\n-import axios from \"axios\";\r\n-import logoimg from \"../assets/logoimage.png\";\r\n-import { Link } from \"react-router-dom\";\r\n-import { end_point_image } from \"../constants/url\";\r\n-import Loader from \"./Loader\";\r\n-\r\n-const TTI = () => {\r\n-  const [imageData, setImageData] = useState(null);\r\n-  const [inputText, setInputText] = useState(\"\");\r\n-  const [error, setError] = useState(null);\r\n-  const [loading, setLoading] = useState(false); // Add loading state\r\n-  const [buttonDisabled, setButtonDisabled] = useState(false); // Add button disabled state\r\n-\r\n-  const handleInputChange = (event) => {\r\n-    setInputText(event.target.value);\r\n-  };\r\n-\r\n-  const loadImage = () => {\r\n-    setLoading(true); // Set loading to true before making the API call\r\n-    setButtonDisabled(true); // Disable the button\r\n-    const prompt = {\r\n-      image_query: inputText,\r\n-    };\r\n-\r\n-    axios\r\n-      .post(`${end_point_image}/process_image`, prompt, {\r\n-        headers: {\r\n-          \"Content-Type\": \"application/json\",\r\n-        },\r\n-      })\r\n-      .then((response) => {\r\n-        setImageData(response.data.image_base64);\r\n-        setError(null);\r\n-      })\r\n-      .catch((error) => {\r\n-        setImageData(\"\");\r\n-        setError(\r\n-          error.message || \"An error occurred while fetching image data\"\r\n-        );\r\n-      })\r\n-      .finally(() => {\r\n-        setLoading(false); // Set loading to false once response is received\r\n-        setButtonDisabled(false); // Enable the button\r\n-      });\r\n-  };\r\n-\r\n-  const handleDownload = () => {\r\n-    const link = document.createElement(\"a\");\r\n-    link.href = `data:image/jpeg;base64,${imageData}`;\r\n-    link.download = \"generated_image.jpg\";\r\n-    document.body.appendChild(link);\r\n-    link.click();\r\n-    document.body.removeChild(link);\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"bg-black h-screen w-full flex flex-col gap-10 py-4 px-[5%]\">\r\n-      <article className=\"flex flex-col text-white gap-8\">\r\n-        <div className=\"flex justify-between\">\r\n-          <div className=\"icon text-blue-50 text-4xl hover:text-sky-400\">\r\n-            <Link to=\"/products\">\r\n-              <i className=\"bx bx-arrow-back\"></i>\r\n-            </Link>\r\n-          </div>\r\n-          <div className=\"heading\">\r\n-            <div className=\"text-center text-4xl font-bold bg-gradient-to-r from-blue-500 to-sky-200  bg-clip-text text-transparent\">\r\n-              Text To Image Generation\r\n-            </div>\r\n-          </div>\r\n-          <div className=\"hidden\">\r\n-            dmfkdsmfsds\r\n-          </div>\r\n-        </div>\r\n-        <div className=\"h-[10vh] flex flex-col px-2 w-[70%] mx-auto bg-gray-200 rounded-3xl\">\r\n-          <div className=\"search-box w-full h-full\">\r\n-            <div className=\"flex flex-row h-full w-full\">\r\n-              <span className=\"flex h-full items-center rounded rounded-r-none border-0 px-3 font-bold text-grey-100 w-[10%]\">\r\n-                <img src={logoimg} className=\"h-[90%]\" alt=\"logo\" />\r\n-              </span>\r\n-              <input\r\n-                className=\"h-full text-grey-darker py-2 font-semibold text-grey-darkest border border-gray-200 px-2 outline-none text-lg text-gray-600 w-[70%] bg-gray-200\"\r\n-                type=\"text\"\r\n-                placeholder=\"What do you want to learn?\"\r\n-                value={inputText}\r\n-                onChange={handleInputChange}\r\n-              />\r\n-              <span className=\"flex items-center rounded rounded-l-none border-0 px-3 font-bold text-grey-100 w-[20%]\">\r\n-                <button className=\"generate-btn\" onClick={() => loadImage()}>\r\n-                  <svg\r\n-                    height=\"24\"\r\n-                    width=\"24\"\r\n-                    fill=\"#FFFFFF\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                    data-name=\"Layer 1\"\r\n-                    id=\"Layer_1\"\r\n-                    className=\"sparkle\"\r\n-                  >\r\n-                    <path d=\"M10,21.236,6.755,14.745.264,11.5,6.755,8.255,10,1.764l3.245,6.491L19.736,11.5l-6.491,3.245ZM18,21l1.5,3L21,21l3-1.5L21,18l-1.5-3L18,18l-3,1.5ZM19.333,4.667,20.5,7l1.167-2.333L24,3.5,21.667,2.333,20.5,0,19.333,2.333,17,3.5Z\"></path>\r\n-                  </svg>\r\n-\r\n-                  <span className=\"generate-text\">Generate</span>\r\n-                </button>\r\n-              </span>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {error && <div className=\"error text-center w-full\">{error}</div>}\r\n-        {loading ? ( // Display Loader while loading\r\n-          <div className=\"flex justify-center w-full\">\r\n-            <Loader />\r\n-          </div>\r\n-        ) : (\r\n-          imageData && (\r\n-            <>\r\n-              <div className=\"image-container h-[50vh] w-full flex gap-5 justify-center items-center\">\r\n-                <img\r\n-                  src={`data:image/png;base64,${imageData}`}\r\n-                  alt=\"Generated Image\"\r\n-                  className=\"h-full\"\r\n-                />\r\n-                <button\r\n-                  onClick={() => handleDownload()}\r\n-                  className=\"rounded-full w-[50px] h-[50px] text-white bg-gradient-to-r from-blue-500 to-sky-200 hover:scale-105\"\r\n-                >\r\n-                  <i className=\"bx bx-download text-2xl\"></i>\r\n-                </button>\r\n-                {/* <button className=\"botao\" onClick={() => handleDownload()}>\r\n-                                    <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className=\"mysvg\"><g id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\">\r\n-                                    </g><g id=\"SVGRepo_tracerCarrier\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></g><g id=\"SVGRepo_iconCarrier\">\r\n-                                            <g id=\"Interface / Download\">\r\n-                                                <path id=\"Vector\" d=\"M6 21H18M12 3V17M12 17L17 12M12 17L7 12\" stroke=\"#f1f1f1\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n-                                                </path>\r\n-                                            </g> </g>\r\n-                                    </svg>\r\n-                                    <span className=\"texto\">Download</span>\r\n-                                </button> */}\r\n-              </div>\r\n-            </>\r\n-          )\r\n-        )}\r\n-      </article>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default TTI;\r\n"
                },
                {
                    "date": 1708683451396,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,148 @@\n+import React, { useState } from \"react\";\r\n+import axios from \"axios\";\r\n+import logoimg from \"../assets/logoimage.png\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { end_point_image } from \"../constants/url\";\r\n+import Loader from \"./Loader\";\r\n+\r\n+const TTI = () => {\r\n+  const [imageData, setImageData] = useState(null);\r\n+  const [inputText, setInputText] = useState(\"\");\r\n+  const [error, setError] = useState(null);\r\n+  const [loading, setLoading] = useState(false); // Add loading state\r\n+  const [buttonDisabled, setButtonDisabled] = useState(false); // Add button disabled state\r\n+\r\n+  const handleInputChange = (event) => {\r\n+    setInputText(event.target.value);\r\n+  };\r\n+\r\n+  const loadImage = () => {\r\n+    setLoading(true); // Set loading to true before making the API call\r\n+    setButtonDisabled(true); // Disable the button\r\n+    const prompt = {\r\n+      image_query: inputText,\r\n+    };\r\n+\r\n+    axios\r\n+      .post(`${end_point_image}/process_image`, prompt, {\r\n+        headers: {\r\n+          \"Content-Type\": \"application/json\",\r\n+        },\r\n+      })\r\n+      .then((response) => {\r\n+        setImageData(response.data.image_base64);\r\n+        setError(null);\r\n+      })\r\n+      .catch((error) => {\r\n+        setImageData(\"\");\r\n+        setError(\r\n+          error.message || \"An error occurred while fetching image data\"\r\n+        );\r\n+      })\r\n+      .finally(() => {\r\n+        setLoading(false); // Set loading to false once response is received\r\n+        setButtonDisabled(false); // Enable the button\r\n+      });\r\n+  };\r\n+\r\n+  const handleDownload = () => {\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = `data:image/jpeg;base64,${imageData}`;\r\n+    link.download = \"generated_image.jpg\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"bg-black h-screen w-full flex flex-col gap-10 py-4 px-[5%]\">\r\n+      <article className=\"flex flex-col text-white gap-8\">\r\n+        <div className=\"flex justify-between pt-10\">\r\n+          <div className=\"icon text-blue-50 text-4xl hover:text-sky-400\">\r\n+            <Link to=\"/products\">\r\n+              <i className=\"bx bx-arrow-back\"></i>\r\n+            </Link>\r\n+          </div>\r\n+          <div className=\"heading\">\r\n+            <div className=\"text-center text-4xl font-bold bg-gradient-to-r from-blue-500 to-sky-200  bg-clip-text text-transparent\">\r\n+              Text To Image Generation\r\n+            </div>\r\n+          </div>\r\n+          <div className=\"invisible\">\r\n+            dmfkdsm\r\n+          </div>\r\n+        </div>\r\n+        <div className=\"h-[10vh] flex flex-col px-2 w-[70%] mx-auto bg-gray-200 rounded-3xl\">\r\n+          <div className=\"search-box w-full h-full\">\r\n+            <div className=\"flex flex-row h-full w-full\">\r\n+              <span className=\"flex h-full items-center rounded rounded-r-none border-0 px-3 font-bold text-grey-100 w-[10%]\">\r\n+                <img src={logoimg} className=\"h-[90%]\" alt=\"logo\" />\r\n+              </span>\r\n+              <input\r\n+                className=\"h-full text-grey-darker py-2 font-semibold text-grey-darkest border border-gray-200 px-2 outline-none text-lg text-gray-600 w-[70%] bg-gray-200\"\r\n+                type=\"text\"\r\n+                placeholder=\"What do you want to learn?\"\r\n+                value={inputText}\r\n+                onChange={handleInputChange}\r\n+              />\r\n+              <span className=\"flex items-center rounded rounded-l-none border-0 px-3 font-bold text-grey-100 w-[20%]\">\r\n+                <button className=\"generate-btn\" onClick={() => loadImage()}>\r\n+                  <svg\r\n+                    height=\"24\"\r\n+                    width=\"24\"\r\n+                    fill=\"#FFFFFF\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                    data-name=\"Layer 1\"\r\n+                    id=\"Layer_1\"\r\n+                    className=\"sparkle\"\r\n+                  >\r\n+                    <path d=\"M10,21.236,6.755,14.745.264,11.5,6.755,8.255,10,1.764l3.245,6.491L19.736,11.5l-6.491,3.245ZM18,21l1.5,3L21,21l3-1.5L21,18l-1.5-3L18,18l-3,1.5ZM19.333,4.667,20.5,7l1.167-2.333L24,3.5,21.667,2.333,20.5,0,19.333,2.333,17,3.5Z\"></path>\r\n+                  </svg>\r\n+\r\n+                  <span className=\"generate-text\">Generate</span>\r\n+                </button>\r\n+              </span>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {error && <div className=\"error text-center w-full\">{error}</div>}\r\n+        {loading ? ( // Display Loader while loading\r\n+          <div className=\"flex justify-center w-full\">\r\n+            <Loader />\r\n+          </div>\r\n+        ) : (\r\n+          imageData && (\r\n+            <>\r\n+              <div className=\"image-container h-[50vh] w-full flex gap-5 justify-center items-center\">\r\n+                <img\r\n+                  src={`data:image/png;base64,${imageData}`}\r\n+                  alt=\"Generated Image\"\r\n+                  className=\"h-full\"\r\n+                />\r\n+                <button\r\n+                  onClick={() => handleDownload()}\r\n+                  className=\"rounded-full w-[50px] h-[50px] text-white bg-gradient-to-r from-blue-500 to-sky-200 hover:scale-105\"\r\n+                >\r\n+                  <i className=\"bx bx-download text-2xl\"></i>\r\n+                </button>\r\n+                {/* <button className=\"botao\" onClick={() => handleDownload()}>\r\n+                                    <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className=\"mysvg\"><g id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\">\r\n+                                    </g><g id=\"SVGRepo_tracerCarrier\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></g><g id=\"SVGRepo_iconCarrier\">\r\n+                                            <g id=\"Interface / Download\">\r\n+                                                <path id=\"Vector\" d=\"M6 21H18M12 3V17M12 17L17 12M12 17L7 12\" stroke=\"#f1f1f1\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n+                                                </path>\r\n+                                            </g> </g>\r\n+                                    </svg>\r\n+                                    <span className=\"texto\">Download</span>\r\n+                                </button> */}\r\n+              </div>\r\n+            </>\r\n+          )\r\n+        )}\r\n+      </article>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default TTI;\r\n"
                },
                {
                    "date": 1708683461453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,148 @@\n+import React, { useState } from \"react\";\r\n+import axios from \"axios\";\r\n+import logoimg from \"../assets/logoimage.png\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { end_point_image } from \"../constants/url\";\r\n+import Loader from \"./Loader\";\r\n+\r\n+const TTI = () => {\r\n+  const [imageData, setImageData] = useState(null);\r\n+  const [inputText, setInputText] = useState(\"\");\r\n+  const [error, setError] = useState(null);\r\n+  const [loading, setLoading] = useState(false); // Add loading state\r\n+  const [buttonDisabled, setButtonDisabled] = useState(false); // Add button disabled state\r\n+\r\n+  const handleInputChange = (event) => {\r\n+    setInputText(event.target.value);\r\n+  };\r\n+\r\n+  const loadImage = () => {\r\n+    setLoading(true); // Set loading to true before making the API call\r\n+    setButtonDisabled(true); // Disable the button\r\n+    const prompt = {\r\n+      image_query: inputText,\r\n+    };\r\n+\r\n+    axios\r\n+      .post(`${end_point_image}/process_image`, prompt, {\r\n+        headers: {\r\n+          \"Content-Type\": \"application/json\",\r\n+        },\r\n+      })\r\n+      .then((response) => {\r\n+        setImageData(response.data.image_base64);\r\n+        setError(null);\r\n+      })\r\n+      .catch((error) => {\r\n+        setImageData(\"\");\r\n+        setError(\r\n+          error.message || \"An error occurred while fetching image data\"\r\n+        );\r\n+      })\r\n+      .finally(() => {\r\n+        setLoading(false); // Set loading to false once response is received\r\n+        setButtonDisabled(false); // Enable the button\r\n+      });\r\n+  };\r\n+\r\n+  const handleDownload = () => {\r\n+    const link = document.createElement(\"a\");\r\n+    link.href = `data:image/jpeg;base64,${imageData}`;\r\n+    link.download = \"generated_image.jpg\";\r\n+    document.body.appendChild(link);\r\n+    link.click();\r\n+    document.body.removeChild(link);\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"bg-black h-screen w-full flex flex-col gap-10 py-4 px-[5%]\">\r\n+      <article className=\"flex flex-col text-white gap-8\">\r\n+        <div className=\"flex justify-between pt-10\">\r\n+          <div className=\"icon text-blue-50 text-4xl hover:text-sky-400\">\r\n+            <Link to=\"/products\">\r\n+              <i className=\"bx bx-arrow-back\"></i>\r\n+            </Link>\r\n+          </div>\r\n+          <div className=\"heading\">\r\n+            <div className=\"text-center text-4xl font-bold bg-gradient-to-r from-blue-500 to-sky-200  bg-clip-text text-transparent\">\r\n+              Text To Image Generation\r\n+            </div>\r\n+          </div>\r\n+          <div className=\"invisible\">\r\n+            dd\r\n+          </div>\r\n+        </div>\r\n+        <div className=\"h-[10vh] flex flex-col px-2 w-[70%] mx-auto bg-gray-200 rounded-3xl\">\r\n+          <div className=\"search-box w-full h-full\">\r\n+            <div className=\"flex flex-row h-full w-full\">\r\n+              <span className=\"flex h-full items-center rounded rounded-r-none border-0 px-3 font-bold text-grey-100 w-[10%]\">\r\n+                <img src={logoimg} className=\"h-[90%]\" alt=\"logo\" />\r\n+              </span>\r\n+              <input\r\n+                className=\"h-full text-grey-darker py-2 font-semibold text-grey-darkest border border-gray-200 px-2 outline-none text-lg text-gray-600 w-[70%] bg-gray-200\"\r\n+                type=\"text\"\r\n+                placeholder=\"What do you want to learn?\"\r\n+                value={inputText}\r\n+                onChange={handleInputChange}\r\n+              />\r\n+              <span className=\"flex items-center rounded rounded-l-none border-0 px-3 font-bold text-grey-100 w-[20%]\">\r\n+                <button className=\"generate-btn\" onClick={() => loadImage()}>\r\n+                  <svg\r\n+                    height=\"24\"\r\n+                    width=\"24\"\r\n+                    fill=\"#FFFFFF\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                    data-name=\"Layer 1\"\r\n+                    id=\"Layer_1\"\r\n+                    className=\"sparkle\"\r\n+                  >\r\n+                    <path d=\"M10,21.236,6.755,14.745.264,11.5,6.755,8.255,10,1.764l3.245,6.491L19.736,11.5l-6.491,3.245ZM18,21l1.5,3L21,21l3-1.5L21,18l-1.5-3L18,18l-3,1.5ZM19.333,4.667,20.5,7l1.167-2.333L24,3.5,21.667,2.333,20.5,0,19.333,2.333,17,3.5Z\"></path>\r\n+                  </svg>\r\n+\r\n+                  <span className=\"generate-text\">Generate</span>\r\n+                </button>\r\n+              </span>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {error && <div className=\"error text-center w-full\">{error}</div>}\r\n+        {loading ? ( // Display Loader while loading\r\n+          <div className=\"flex justify-center w-full\">\r\n+            <Loader />\r\n+          </div>\r\n+        ) : (\r\n+          imageData && (\r\n+            <>\r\n+              <div className=\"image-container h-[50vh] w-full flex gap-5 justify-center items-center\">\r\n+                <img\r\n+                  src={`data:image/png;base64,${imageData}`}\r\n+                  alt=\"Generated Image\"\r\n+                  className=\"h-full\"\r\n+                />\r\n+                <button\r\n+                  onClick={() => handleDownload()}\r\n+                  className=\"rounded-full w-[50px] h-[50px] text-white bg-gradient-to-r from-blue-500 to-sky-200 hover:scale-105\"\r\n+                >\r\n+                  <i className=\"bx bx-download text-2xl\"></i>\r\n+                </button>\r\n+                {/* <button className=\"botao\" onClick={() => handleDownload()}>\r\n+                                    <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className=\"mysvg\"><g id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\">\r\n+                                    </g><g id=\"SVGRepo_tracerCarrier\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></g><g id=\"SVGRepo_iconCarrier\">\r\n+                                            <g id=\"Interface / Download\">\r\n+                                                <path id=\"Vector\" d=\"M6 21H18M12 3V17M12 17L17 12M12 17L7 12\" stroke=\"#f1f1f1\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n+                                                </path>\r\n+                                            </g> </g>\r\n+                                    </svg>\r\n+                                    <span className=\"texto\">Download</span>\r\n+                                </button> */}\r\n+              </div>\r\n+            </>\r\n+          )\r\n+        )}\r\n+      </article>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default TTI;\r\n"
                }
            ],
            "date": 1708683002637,
            "name": "Commit-0",
            "content": "\r\nimport React, { useState } from \"react\";\r\nimport axios from 'axios';\r\nimport logoimg from \"../assets/logoimage.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { end_point_image } from \"../constants/url\";\r\nimport Loader from \"./Loader\";\r\n\r\n\r\nconst TTI = () => {\r\n    const [imageData, setImageData] = useState(null);\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false); // Add loading state\r\n    const [buttonDisabled, setButtonDisabled] = useState(false); // Add button disabled state\r\n\r\n    const handleInputChange = (event) => {\r\n        setInputText(event.target.value);\r\n    };\r\n\r\n    const loadImage = () => {\r\n        setLoading(true); // Set loading to true before making the API call\r\n        setButtonDisabled(true); // Disable the button\r\n        const prompt = {\r\n            image_query: inputText\r\n        };\r\n\r\n        axios.post(`${end_point_image}/process_image`, prompt, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(response => {\r\n                setImageData(response.data.image_base64);\r\n                setError(null);\r\n            })\r\n            .catch(error => {\r\n                setImageData(\"\")\r\n                setError(error.message || 'An error occurred while fetching image data');\r\n            })\r\n            .finally(() => {\r\n                setLoading(false); // Set loading to false once response is received\r\n                setButtonDisabled(false); // Enable the button\r\n            });\r\n    };\r\n\r\n    const handleDownload = () => {\r\n        const link = document.createElement('a');\r\n        link.href = `data:image/jpeg;base64,${imageData}`;\r\n        link.download = 'generated_image.jpg';\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg-black h-screen w-full flex flex-col gap-10 py-4 px-[5%]\">\r\n            <div className=\"icon text-blue-50 text-4xl hover:text-sky-400\">\r\n                <Link to='/products'>\r\n                    <i className='bx bx-arrow-back'></i>\r\n                </Link>\r\n            </div>\r\n            <article className=\"flex flex-col text-white gap-8\">\r\n                <div className=\"heading\">\r\n                    <div className=\"text-center text-4xl font-bold bg-gradient-to-r from-blue-500 to-sky-200  bg-clip-text text-transparent\">\r\n                        Text To Image Generation\r\n                    </div>\r\n                </div>\r\n                <div className=\"h-[10vh] flex flex-col px-2 w-[70%] mx-auto bg-gray-200 rounded-3xl\">\r\n                    <div className=\"search-box w-full h-full\">\r\n                        <div className=\"flex flex-row h-full w-full\">\r\n                            <span\r\n                                className=\"flex h-full items-center rounded rounded-r-none border-0 px-3 font-bold text-grey-100 w-[10%]\">\r\n                                <img src={logoimg} className=\"h-[90%]\" alt=\"logo\" />\r\n                            </span>\r\n                            <input\r\n                                className=\"h-full text-grey-darker py-2 font-semibold text-grey-darkest border border-gray-200 px-2 outline-none text-lg text-gray-600 w-[70%] bg-gray-200\"\r\n                                type=\"text\" placeholder=\"What do you want to learn?\"\r\n                                value={inputText}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                            <span\r\n                                className=\"flex items-center rounded rounded-l-none border-0 px-3 pt-1 font-bold text-grey-100 w-[20%]\">\r\n\r\n                                <button className=\"generate-btn\" onClick={() => loadImage()}>\r\n                                    <svg height=\"24\" width=\"24\" fill=\"#FFFFFF\" viewBox=\"0 0 24 24\" data-name=\"Layer 1\" id=\"Layer_1\" className=\"sparkle\">\r\n                                        <path d=\"M10,21.236,6.755,14.745.264,11.5,6.755,8.255,10,1.764l3.245,6.491L19.736,11.5l-6.491,3.245ZM18,21l1.5,3L21,21l3-1.5L21,18l-1.5-3L18,18l-3,1.5ZM19.333,4.667,20.5,7l1.167-2.333L24,3.5,21.667,2.333,20.5,0,19.333,2.333,17,3.5Z\"></path>\r\n                                    </svg>\r\n\r\n                                    <span className=\"generate-text\">Generate</span>\r\n                                </button>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {error && <div className=\"error text-center w-full\">{error}</div>}\r\n                {loading ? ( // Display Loader while loading\r\n                    <div className=\"flex justify-center w-full\">\r\n                        <Loader />\r\n                    </div>\r\n                ) : (\r\n                    imageData && (\r\n                        <>\r\n                            <div className=\"image-container h-[50vh] w-full flex gap-5 justify-center items-center\">\r\n                                <img src={`data:image/png;base64,${imageData}`} alt=\"Generated Image\"\r\n                                    className=\"h-full\"\r\n                                />\r\n                                <button\r\n                                    onClick={() => handleDownload()}\r\n                                    className=\"rounded-full w-[50px] h-[50px] text-white bg-gradient-to-r from-blue-500 to-sky-200 hover:scale-105\">\r\n                                    <i className=\"bx bx-download text-2xl\"></i>\r\n                                </button>\r\n                                {/* <button className=\"botao\" onClick={() => handleDownload()}>\r\n                                    <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className=\"mysvg\"><g id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\">\r\n                                    </g><g id=\"SVGRepo_tracerCarrier\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></g><g id=\"SVGRepo_iconCarrier\">\r\n                                            <g id=\"Interface / Download\">\r\n                                                <path id=\"Vector\" d=\"M6 21H18M12 3V17M12 17L17 12M12 17L7 12\" stroke=\"#f1f1f1\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                                                </path>\r\n                                            </g> </g>\r\n                                    </svg>\r\n                                    <span className=\"texto\">Download</span>\r\n                                </button> */}\r\n                            </div>\r\n\r\n                        </>\r\n                    )\r\n                )}\r\n            </article>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TTI;\r\n"
        }
    ]
}